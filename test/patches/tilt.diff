diff --git a/Gemfile b/Gemfile
index a02cfc3..2b56aba 100644
--- a/Gemfile
+++ b/Gemfile
@@ -21,7 +21,8 @@ group :primary do
   if ENV['OLD_SASS']
     gem 'sass'
   else
-    gem 'sassc'
+    gem 'sassc', github: 'sass/sassc-ruby', ref: 'refs/pull/233/head'
+    gem 'sassc-embedded', path: '../../../../'
   end
 
   if can_execjs
diff --git a/test/tilt_sasstemplate_test.rb b/test/tilt_sasstemplate_test.rb
index a55e479..e1e76dc 100644
--- a/test/tilt_sasstemplate_test.rb
+++ b/test/tilt_sasstemplate_test.rb
@@ -10,13 +10,13 @@ begin
     end
 
     test "compiles and evaluates the template on #render" do
-      template = Tilt::SassTemplate.new { |t| "#main\n  :background-color #0000f1" }
-      assert_equal "#main {\n  background-color: #0000f1; }\n", template.render
+      template = Tilt::SassTemplate.new { |t| "#main\n  background-color: #0000f1" }
+      assert_equal "#main {\n  background-color: #0000f1;\n}\n", template.render
     end
 
     test "can be rendered more than once" do
-      template = Tilt::SassTemplate.new { |t| "#main\n  :background-color #0000f1" }
-      3.times { assert_equal "#main {\n  background-color: #0000f1; }\n", template.render }
+      template = Tilt::SassTemplate.new { |t| "#main\n  background-color: #0000f1" }
+      3.times { assert_equal "#main {\n  background-color: #0000f1;\n}\n", template.render }
     end
   end
 
@@ -27,12 +27,12 @@ begin
 
     test "compiles and evaluates the template on #render" do
       template = Tilt::ScssTemplate.new { |t| "#main {\n  background-color: #0000f1;\n}" }
-      assert_equal "#main {\n  background-color: #0000f1; }\n", template.render
+      assert_equal "#main {\n  background-color: #0000f1;\n}\n", template.render
     end
 
     test "can be rendered more than once" do
       template = Tilt::ScssTemplate.new { |t| "#main {\n  background-color: #0000f1;\n}" }
-      3.times { assert_equal "#main {\n  background-color: #0000f1; }\n", template.render }
+      3.times { assert_equal "#main {\n  background-color: #0000f1;\n}\n", template.render }
     end
   end
 
